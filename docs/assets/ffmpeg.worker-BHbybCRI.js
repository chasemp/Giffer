var F=Object.defineProperty;var O=t=>{throw TypeError(t)};var T=(t,e,a)=>e in t?F(t,e,{enumerable:!0,configurable:!0,writable:!0,value:a}):t[e]=a;var l=(t,e,a)=>T(t,typeof e!="symbol"?e+"":e,a),b=(t,e,a)=>e.has(t)||O("Cannot "+a);var s=(t,e,a)=>(b(t,e,"read from private field"),a?a.call(t):e.get(t)),f=(t,e,a)=>e.has(t)?O("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(t):e.set(t,a),w=(t,e,a,r)=>(b(t,e,"write to private field"),r?r.call(t,a):e.set(t,a),a);var i;(function(t){t.LOAD="LOAD",t.EXEC="EXEC",t.WRITE_FILE="WRITE_FILE",t.READ_FILE="READ_FILE",t.DELETE_FILE="DELETE_FILE",t.RENAME="RENAME",t.CREATE_DIR="CREATE_DIR",t.LIST_DIR="LIST_DIR",t.DELETE_DIR="DELETE_DIR",t.ERROR="ERROR",t.DOWNLOAD="DOWNLOAD",t.PROGRESS="PROGRESS",t.LOG="LOG"})(i||(i={}));const k=(()=>{let t=0;return()=>t++})(),C=new Error("ffmpeg is not loaded, call `await ffmpeg.load()` first"),U=new Error("called FFmpeg.terminate()");var o,d,E,p,u,g,c;class N{constructor(){f(this,o,null);f(this,d,{});f(this,E,{});f(this,p,[]);f(this,u,[]);l(this,"loaded",!1);f(this,g,()=>{s(this,o)&&(s(this,o).onmessage=({data:{id:e,type:a,data:r}})=>{switch(a){case i.LOAD:this.loaded=!0,s(this,d)[e](r);break;case i.EXEC:case i.WRITE_FILE:case i.READ_FILE:case i.DELETE_FILE:case i.RENAME:case i.CREATE_DIR:case i.LIST_DIR:case i.DELETE_DIR:s(this,d)[e](r);break;case i.LOG:s(this,p).forEach(n=>n(r));break;case i.PROGRESS:s(this,u).forEach(n=>n(r));break;case i.ERROR:s(this,E)[e](r);break}delete s(this,d)[e],delete s(this,E)[e]})});f(this,c,({type:e,data:a},r=[])=>s(this,o)?new Promise((n,m)=>{const R=k();s(this,o)&&s(this,o).postMessage({id:R,type:e,data:a},r),s(this,d)[R]=n,s(this,E)[R]=m}):Promise.reject(C));l(this,"load",(e={})=>(s(this,o)||(w(this,o,new Worker(new URL(""+new URL("worker-D58qJ3c2.js",import.meta.url).href,import.meta.url),{type:"module"})),s(this,g).call(this)),s(this,c).call(this,{type:i.LOAD,data:e})));l(this,"exec",(e,a=-1)=>s(this,c).call(this,{type:i.EXEC,data:{args:e,timeout:a}}));l(this,"terminate",()=>{const e=Object.keys(s(this,E));for(const a of e)s(this,E)[a](U),delete s(this,E)[a],delete s(this,d)[a];s(this,o)&&(s(this,o).terminate(),w(this,o,null),this.loaded=!1)});l(this,"writeFile",(e,a)=>{const r=[];return a instanceof Uint8Array&&r.push(a.buffer),s(this,c).call(this,{type:i.WRITE_FILE,data:{path:e,data:a}},r)});l(this,"readFile",(e,a="binary")=>s(this,c).call(this,{type:i.READ_FILE,data:{path:e,encoding:a}}));l(this,"deleteFile",e=>s(this,c).call(this,{type:i.DELETE_FILE,data:{path:e}}));l(this,"rename",(e,a)=>s(this,c).call(this,{type:i.RENAME,data:{oldPath:e,newPath:a}}));l(this,"createDir",e=>s(this,c).call(this,{type:i.CREATE_DIR,data:{path:e}}));l(this,"listDir",e=>s(this,c).call(this,{type:i.LIST_DIR,data:{path:e}}));l(this,"deleteDir",e=>s(this,c).call(this,{type:i.DELETE_DIR,data:{path:e}}))}on(e,a){e==="log"?s(this,p).push(a):e==="progress"&&s(this,u).push(a)}off(e,a){e==="log"?w(this,p,s(this,p).filter(r=>r!==a)):e==="progress"&&w(this,u,s(this,u).filter(r=>r!==a))}}o=new WeakMap,d=new WeakMap,E=new WeakMap,p=new WeakMap,u=new WeakMap,g=new WeakMap,c=new WeakMap;const x=t=>new Promise((e,a)=>{const r=new FileReader;r.onload=()=>{const{result:n}=r;n instanceof ArrayBuffer?e(new Uint8Array(n)):e(new Uint8Array)},r.onerror=n=>{a(Error(`File could not be read! Code=${n?.target?.error?.code||-1}`))},r.readAsArrayBuffer(t)}),$=async t=>{let e;if(typeof t=="string")/data:_data\/([a-zA-Z]*);base64,([^"]*)/.test(t)?e=atob(t.split(",")[1]).split("").map(a=>a.charCodeAt(0)):e=await(await fetch(t)).arrayBuffer();else if(t instanceof URL)e=await(await fetch(t)).arrayBuffer();else if(t instanceof File||t instanceof Blob)e=await x(t);else return new Uint8Array;return new Uint8Array(e)};let h=null,_=!1;function B(t){switch(t){case"low":return{dither:"bayer:bayer_scale=5",scaleFlags:"bilinear"};case"high":return{dither:"sierra2_4a",scaleFlags:"lanczos"};default:return{dither:"floyd_steinberg",scaleFlags:"bicubic"}}}async function P(){if(h)return h;if(_){for(;!h;)await new Promise(t=>setTimeout(t,50));return h}_=!0,h=new N,h.on("progress",({progress:t})=>{self.postMessage({ratio:Math.max(0,Math.min(1,t))})});try{await h.load({coreURL:"https://unpkg.com/@ffmpeg/core@0.12.6/dist/esm/ffmpeg-core.js",wasmURL:"https://unpkg.com/@ffmpeg/core@0.12.6/dist/esm/ffmpeg-core.wasm"})}catch(t){throw console.error("FFmpeg load failed:",t),t}finally{_=!1}return h}self.addEventListener("message",async t=>{const{type:e,payload:a}=t.data||{};if(e!=="encode")return;const r=a;try{const n=await P(),m="input.mp4",R="palette.png",D="output.gif",L=Math.max(0,Math.min(r.startSec,r.endSec-.1)),A=Math.max(.1,r.endSec-L),I=B(r.quality);await n.writeFile(m,await $(new Blob([r.file]))),await n.exec(["-ss",String(L),"-t",String(A),"-i",m,"-vf",`fps=${r.fps},scale=${r.width}:-1:flags=${I.scaleFlags},palettegen`,R]);const S=r.loop?"0":"1";await n.exec(["-ss",String(L),"-t",String(A),"-i",m,"-i",R,"-lavfi",`fps=${r.fps},scale=${r.width}:-1:flags=${I.scaleFlags} [x]; [x][1:v] paletteuse=dither=${I.dither}`,"-loop",S,D]);const y=await n.readFile(D);self.postMessage({type:"done",data:y},[y.buffer]);try{await n.deleteFile(m),await n.deleteFile(R),await n.deleteFile(D)}catch{}}catch(n){self.postMessage({type:"error",message:n?.message||"encode failed"})}});
