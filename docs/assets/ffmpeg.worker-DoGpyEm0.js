var S=Object.defineProperty;var F=t=>{throw TypeError(t)};var T=(t,e,s)=>e in t?S(t,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[e]=s;var l=(t,e,s)=>T(t,typeof e!="symbol"?e+"":e,s),O=(t,e,s)=>e.has(t)||F("Cannot "+s);var a=(t,e,s)=>(O(t,e,"read from private field"),s?s.call(t):e.get(t)),f=(t,e,s)=>e.has(t)?F("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(t):e.set(t,s),g=(t,e,s,r)=>(O(t,e,"write to private field"),r?r.call(t,s):e.set(t,s),s);var i;(function(t){t.LOAD="LOAD",t.EXEC="EXEC",t.WRITE_FILE="WRITE_FILE",t.READ_FILE="READ_FILE",t.DELETE_FILE="DELETE_FILE",t.RENAME="RENAME",t.CREATE_DIR="CREATE_DIR",t.LIST_DIR="LIST_DIR",t.DELETE_DIR="DELETE_DIR",t.ERROR="ERROR",t.DOWNLOAD="DOWNLOAD",t.PROGRESS="PROGRESS",t.LOG="LOG"})(i||(i={}));const k=(()=>{let t=0;return()=>t++})(),C=new Error("ffmpeg is not loaded, call `await ffmpeg.load()` first"),P=new Error("called FFmpeg.terminate()");var n,h,E,u,R,w,c;class U{constructor(){f(this,n,null);f(this,h,{});f(this,E,{});f(this,u,[]);f(this,R,[]);l(this,"loaded",!1);f(this,w,()=>{a(this,n)&&(a(this,n).onmessage=({data:{id:e,type:s,data:r}})=>{switch(s){case i.LOAD:this.loaded=!0,a(this,h)[e](r);break;case i.EXEC:case i.WRITE_FILE:case i.READ_FILE:case i.DELETE_FILE:case i.RENAME:case i.CREATE_DIR:case i.LIST_DIR:case i.DELETE_DIR:a(this,h)[e](r);break;case i.LOG:a(this,u).forEach(o=>o(r));break;case i.PROGRESS:a(this,R).forEach(o=>o(r));break;case i.ERROR:a(this,E)[e](r);break}delete a(this,h)[e],delete a(this,E)[e]})});f(this,c,({type:e,data:s},r=[])=>a(this,n)?new Promise((o,m)=>{const p=k();a(this,n)&&a(this,n).postMessage({id:p,type:e,data:s},r),a(this,h)[p]=o,a(this,E)[p]=m}):Promise.reject(C));l(this,"load",(e={})=>(a(this,n)||(g(this,n,new Worker(new URL(""+new URL("worker-D58qJ3c2.js",import.meta.url).href,import.meta.url),{type:"module"})),a(this,w).call(this)),a(this,c).call(this,{type:i.LOAD,data:e})));l(this,"exec",(e,s=-1)=>a(this,c).call(this,{type:i.EXEC,data:{args:e,timeout:s}}));l(this,"terminate",()=>{const e=Object.keys(a(this,E));for(const s of e)a(this,E)[s](P),delete a(this,E)[s],delete a(this,h)[s];a(this,n)&&(a(this,n).terminate(),g(this,n,null),this.loaded=!1)});l(this,"writeFile",(e,s)=>{const r=[];return s instanceof Uint8Array&&r.push(s.buffer),a(this,c).call(this,{type:i.WRITE_FILE,data:{path:e,data:s}},r)});l(this,"readFile",(e,s="binary")=>a(this,c).call(this,{type:i.READ_FILE,data:{path:e,encoding:s}}));l(this,"deleteFile",e=>a(this,c).call(this,{type:i.DELETE_FILE,data:{path:e}}));l(this,"rename",(e,s)=>a(this,c).call(this,{type:i.RENAME,data:{oldPath:e,newPath:s}}));l(this,"createDir",e=>a(this,c).call(this,{type:i.CREATE_DIR,data:{path:e}}));l(this,"listDir",e=>a(this,c).call(this,{type:i.LIST_DIR,data:{path:e}}));l(this,"deleteDir",e=>a(this,c).call(this,{type:i.DELETE_DIR,data:{path:e}}))}on(e,s){e==="log"?a(this,u).push(s):e==="progress"&&a(this,R).push(s)}off(e,s){e==="log"?g(this,u,a(this,u).filter(r=>r!==s)):e==="progress"&&g(this,R,a(this,R).filter(r=>r!==s))}}n=new WeakMap,h=new WeakMap,E=new WeakMap,u=new WeakMap,R=new WeakMap,w=new WeakMap,c=new WeakMap;const N=t=>new Promise((e,s)=>{const r=new FileReader;r.onload=()=>{const{result:o}=r;o instanceof ArrayBuffer?e(new Uint8Array(o)):e(new Uint8Array)},r.onerror=o=>{s(Error(`File could not be read! Code=${o?.target?.error?.code||-1}`))},r.readAsArrayBuffer(t)}),x=async t=>{let e;if(typeof t=="string")/data:_data\/([a-zA-Z]*);base64,([^"]*)/.test(t)?e=atob(t.split(",")[1]).split("").map(s=>s.charCodeAt(0)):e=await(await fetch(t)).arrayBuffer();else if(t instanceof URL)e=await(await fetch(t)).arrayBuffer();else if(t instanceof File||t instanceof Blob)e=await N(t);else return new Uint8Array;return new Uint8Array(e)};let d=null,_=!1;function $(t){switch(t){case"low":return{dither:"bayer:bayer_scale=5",scaleFlags:"bilinear"};case"high":return{dither:"sierra2_4a",scaleFlags:"lanczos"};default:return{dither:"floyd_steinberg",scaleFlags:"bicubic"}}}async function B(){if(d)return d;if(_){for(;!d;)await new Promise(t=>setTimeout(t,50));return d}_=!0,d=new U,d.on("progress",({progress:t})=>{self.postMessage({ratio:Math.max(0,Math.min(1,t))})});try{console.log("Starting FFmpeg load...");const t=d.load({coreURL:"https://unpkg.com/@ffmpeg/core@0.12.6/dist/esm/ffmpeg-core.js",wasmURL:"https://unpkg.com/@ffmpeg/core@0.12.6/dist/esm/ffmpeg-core.wasm"}),e=new Promise((s,r)=>{setTimeout(()=>r(new Error("FFmpeg load timeout after 30 seconds")),3e4)});await Promise.race([t,e]),console.log("FFmpeg load completed successfully")}catch(t){throw console.error("FFmpeg load failed:",t),t}finally{_=!1}return d}self.addEventListener("message",async t=>{const{type:e,payload:s}=t.data||{};if(e!=="encode")return;const r=s;try{const o=await B(),m="input.mp4",p="palette.png",D="output.gif",L=Math.max(0,Math.min(r.startSec,r.endSec-.1)),A=Math.max(.1,r.endSec-L),I=$(r.quality);await o.writeFile(m,await x(new Blob([r.file]))),await o.exec(["-ss",String(L),"-t",String(A),"-i",m,"-vf",`fps=${r.fps},scale=${r.width}:-1:flags=${I.scaleFlags},palettegen`,p]);const b=r.loop?"0":"1";await o.exec(["-ss",String(L),"-t",String(A),"-i",m,"-i",p,"-lavfi",`fps=${r.fps},scale=${r.width}:-1:flags=${I.scaleFlags} [x]; [x][1:v] paletteuse=dither=${I.dither}`,"-loop",b,D]);const y=await o.readFile(D);self.postMessage({type:"done",data:y},[y.buffer]);try{await o.deleteFile(m),await o.deleteFile(p),await o.deleteFile(D)}catch{}}catch(o){self.postMessage({type:"error",message:o?.message||"encode failed"})}});
