var m=Object.defineProperty;var d=E=>{throw TypeError(E)};var u=(E,t,e)=>t in E?m(E,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):E[t]=e;var h=(E,t,e)=>u(E,typeof t!="symbol"?t+"":t,e),O=(E,t,e)=>t.has(E)||d("Cannot "+e);var s=(E,t,e)=>(O(E,t,"read from private field"),e?e.call(E):t.get(E)),D=(E,t,e)=>t.has(E)?d("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(E):t.set(E,e),c=(E,t,e,r)=>(O(E,t,"write to private field"),r?r.call(E,e):t.set(E,e),e);var i;(function(E){E.LOAD="LOAD",E.EXEC="EXEC",E.WRITE_FILE="WRITE_FILE",E.READ_FILE="READ_FILE",E.DELETE_FILE="DELETE_FILE",E.RENAME="RENAME",E.CREATE_DIR="CREATE_DIR",E.LIST_DIR="LIST_DIR",E.DELETE_DIR="DELETE_DIR",E.ERROR="ERROR",E.DOWNLOAD="DOWNLOAD",E.PROGRESS="PROGRESS",E.LOG="LOG"})(i||(i={}));const p=(()=>{let E=0;return()=>E++})(),T=new Error("ffmpeg is not loaded, call `await ffmpeg.load()` first"),w=new Error("called FFmpeg.terminate()");var R,l,o,n,L,f,a;class S{constructor(){D(this,R,null);D(this,l,{});D(this,o,{});D(this,n,[]);D(this,L,[]);h(this,"loaded",!1);D(this,f,()=>{s(this,R)&&(s(this,R).onmessage=({data:{id:t,type:e,data:r}})=>{switch(e){case i.LOAD:this.loaded=!0,s(this,l)[t](r);break;case i.EXEC:case i.WRITE_FILE:case i.READ_FILE:case i.DELETE_FILE:case i.RENAME:case i.CREATE_DIR:case i.LIST_DIR:case i.DELETE_DIR:s(this,l)[t](r);break;case i.LOG:s(this,n).forEach(I=>I(r));break;case i.PROGRESS:s(this,L).forEach(I=>I(r));break;case i.ERROR:s(this,o)[t](r);break}delete s(this,l)[t],delete s(this,o)[t]})});D(this,a,({type:t,data:e},r=[])=>s(this,R)?new Promise((I,A)=>{const _=p();s(this,R)&&s(this,R).postMessage({id:_,type:t,data:e},r),s(this,l)[_]=I,s(this,o)[_]=A}):Promise.reject(T));h(this,"load",(t={})=>(s(this,R)||(c(this,R,new Worker(new URL(""+new URL("worker-D58qJ3c2.js",import.meta.url).href,import.meta.url),{type:"module"})),s(this,f).call(this)),s(this,a).call(this,{type:i.LOAD,data:t})));h(this,"exec",(t,e=-1)=>s(this,a).call(this,{type:i.EXEC,data:{args:t,timeout:e}}));h(this,"terminate",()=>{const t=Object.keys(s(this,o));for(const e of t)s(this,o)[e](w),delete s(this,o)[e],delete s(this,l)[e];s(this,R)&&(s(this,R).terminate(),c(this,R,null),this.loaded=!1)});h(this,"writeFile",(t,e)=>{const r=[];return e instanceof Uint8Array&&r.push(e.buffer),s(this,a).call(this,{type:i.WRITE_FILE,data:{path:t,data:e}},r)});h(this,"readFile",(t,e="binary")=>s(this,a).call(this,{type:i.READ_FILE,data:{path:t,encoding:e}}));h(this,"deleteFile",t=>s(this,a).call(this,{type:i.DELETE_FILE,data:{path:t}}));h(this,"rename",(t,e)=>s(this,a).call(this,{type:i.RENAME,data:{oldPath:t,newPath:e}}));h(this,"createDir",t=>s(this,a).call(this,{type:i.CREATE_DIR,data:{path:t}}));h(this,"listDir",t=>s(this,a).call(this,{type:i.LIST_DIR,data:{path:t}}));h(this,"deleteDir",t=>s(this,a).call(this,{type:i.DELETE_DIR,data:{path:t}}))}on(t,e){t==="log"?s(this,n).push(e):t==="progress"&&s(this,L).push(e)}off(t,e){t==="log"?c(this,n,s(this,n).filter(r=>r!==e)):t==="progress"&&c(this,L,s(this,L).filter(r=>r!==e))}}R=new WeakMap,l=new WeakMap,o=new WeakMap,n=new WeakMap,L=new WeakMap,f=new WeakMap,a=new WeakMap;export{S as FFmpeg};
